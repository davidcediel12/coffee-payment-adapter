openapi: 3.0.3
info:
  title: Payment Adapter
  description: |-
    
    Specification of the Payment Adapter service, used to interact with the payment gateway.
  contact:
    email: david.cediel@alumnos.upm.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
  - url: https://localhost:8080/v1/payments
    description: Local development
tags:
  - name: Payments
    description: Tag related to payments
paths:
  /reservations:
    post:
      operationId: payCart
      tags:
        - Payments
      summary: Performs the payment of a shopping cart
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          description: key that identifies the payment, used to avoid duplicated payment attempts
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6

      requestBody:
        description: Payment Request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentRequest"
      responses:
        '200':
          description: Reservation was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        '400':
          description: Payment fails
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  responses:
    Unauthorized:
      description: Unauthenticated, unable to perform the operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: Not enough privileges to perform the operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    PaymentRequest:
      type: object
      properties:
        paymentMethod:
          type: string
          enum: ["CREDIT_CARD"]
          example: "CREDIT_CARD"
        cardNumber:
          type: string
          pattern: "^[1-9][0-9]{15}$"
          example: 4111111111111111
        expirationDate:
          type: string
          pattern: "^[0-9]{2}\/[0-9]{2}"
          example: 10/28
        cardHolder:
          type: string
          example: Jhon Doe
        cvv:
          type: string
          format: "[1-9][0-9]{2}"
          example: 123
        amount:
          type: number
          example: 59.99
        currency:
          type: string
          example: USD
        cartId:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    PaymentResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        transactionId:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cartId:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        amount:
          type: number
          example: 59.99
        currency:
          type: string
          example: USD
        message:
          type: string
          example: Payment processed successfully
    ErrorResponse:
      required:
        - developerMessage
        - errorCode
        - userMessage
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: 2025-04-10T10:51:15.7047861
        error:
          type: string
          description: Code that identify the error
          example: "PRD-VA-01"
        message:
          maxLength: 256
          pattern: "^[a-zA-Z\\s]*$"
          type: string
          example: Error performing the payment
        path:
          type: string
          description: uri that fails
          example: http://localhost:8080/v1/payments
        details:
          type: string
          example: {"cause": "insufficient funds"}

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

